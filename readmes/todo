############################################################

V1 Specification, user stories, etc:
√ Log in
√ Log out
√ Schedule push to all
√ View messages and status
√ View receivers of a notification template
√ View details of a message and edit/remove/cancel a message
√ View users / registered devices/tokens
√ Users -> User Details -> Shoudl be able to view received messages
√ Client framework for server communication
X View administrators, add new administrators (an admin has a role, e.g. super-admin, regular admin, etc)

Future specifications:
  X Group users into different groups
  X View user groups / filter users on groups/attributes
X Send push to specific user groups (A notification_template has receivers? (i.e. list of DeviceId))
  X Geolocation
  X Send push to users at certain locations


############################################################

Todo V1:

X Performance sucks when accessing DB, e.g.
  1) Register 500 users with 2 devices each (i.e. 500 users and 1000 devices)
  2) Create a notification and wait for it to be sent
  3) Navigate to notification detail and WAIT FOREVER while notifications, users and devices are being fetched...

  How to fix?
    - Think over access pattern? E.g. don't access several times from view, instead, only fetch once in controller and send to view?
    - Disable db-log?
    - Index?
    - Cache?

X A maximum of 1000 GCM bulk messages. Divide receivers into groups of 1000
  Error sending notification: 400 - "Number of messages on bulk (10000) exceeds maximum allowed (1000)\n"}

X refactor REST api names, e.g. new_message --> /message 'GET, POST, PUT, DELETE' etc
X Expose update_user (PUT)
X refactor Client framework to comply to updated REST api
X Update apiary to comply to updated REST api
X Update lucid chart

X Check push_module_device_controller and user_controller, make sure you cannot add several devices with same id, etc

X CRUD admins (an admin has a role, e.g. super-admin, regular admin, etc)

############################################################

Todo Future: 

  X Live update of sent notifications in 'push/view_messages' when a message is sent
  X Live update of received notifications in 'user/' when a message is sent
  X Move notification_scheduler into src, and invoke it from init?
  X Write tests!!!

  X refactor common components into reusable div classes
  X refactor common components into reusable html template/element
  √ template_base, create block_meta_scripts in end of BODY? for performance
  X all views, see if I can refactor reouting to {% url action %} format, 
  X view:Disable 'create' button if no input is entered

  X Improve code reusablity etc
  - <a href="{% url action="edit" record_id=record.id %}

  - <form name="upload" action="{% url action="upload" model_name=type %}" method="post" enctype="multipart/form-data">
  <input type="file" name="file" /> &nbsp; &nbsp;
  <input type="submit" value="Upload" />
  </form>

Tests
  X Fix tests that failed after login
  X Eunit Test admin, auth_lib, session_lib, device_service, ,
  X Functional Test push_controller, auth_controller, lost_controller
  X Write tests!!!

  X How localize web client?

############################################################
